Material DB:

* how to deal with physical properties (including dimensions)
- add a column for units?
- define a standard to store data (SI for instance)
- use python3-pint (or other):
-- to store/get data in proper SI unit
-- to display units in view
-- to perform conversion 

SQLMODEL:

* add method to create/read/update/destroy object in database.py or app.py
- create check if existing object before adding
- use a unique

```
Field(sa_column=Column("username", VARCHAR, unique=True))
```

see https://www.w3schools.com/sql/sql_datatypes.asp


Other Magnet python modules:

* make data structure more consistant in each modules


GUI: app or web app??

* test with flask
- integrated
- improve look and fell of web site
    - add authentification (ldap?)
    - gestion des roles
    - create a base html (see: w3schools.com/css/demo_default.htm#)
    - add update for every category
    - add create/add button and a duplicate button for every category
    - create name for object using a pattern (see: https://www.stavros.io/posts/fastapi-with-django/

```
def generate_uuid() -> str:
    """Generate a UUID."""
    return shortuuid.ShortUUID().random(20)
class CharIDModel(models.Model):
    """Base model that gives children random string UUIDs."""

    id = models.CharField(
        max_length=30,
        primary_key=True,
        default=generate_uuid,
        editable=False
    )
```

- improved db
    - make name unique
    - add missing field (see Francois/Benjamin/Cedric/Kevin/Olivier)

- add MRecord
    - plot with ?? ref: https://betterprogramming.pub/deploy-interactive-real-time-data-visualizations-on-flask-with-bokeh-311239273838 ??
                        https://docs.bokeh.org/en/latest/docs/user_guide/embed.html

- adding roles ref: https://flask-user.readthedocs.io/en/latest/authorization.html

- update methods:
     - add choice for status

```
class PastebinEntry(Form):
    language = SelectField(u'Programming Language', choices=[('cpp', 'C++'), ('py', 'Python'), ('text', 'Plain Text')])
```

see: https://wtforms.readthedocs.io/en/2.3.x/fields/

     - add time for MRecord ??
     
* django ?
- as separate apps?
- as global app
-- see https://stackoverflow.com/questions/63726203/is-it-possible-to-use-fastapi-with-django
-- see Using FastApi with Django


